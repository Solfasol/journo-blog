# Generated by Django 3.0.4 on 2020-03-31 13:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import martor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='contributor/')),
                ('twitter', models.CharField(blank=True, max_length=50, null=True)),
                ('instagram', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'contributor',
                'verbose_name_plural': 'contributors',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'series',
                'verbose_name_plural': 'series',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('slug', models.SlugField(unique=True)),
                ('subtitle', models.CharField(blank=True, max_length=200, null=True, verbose_name='subtitle')),
                ('lang', models.CharField(choices=[('tr', 'Turkish'), ('en', 'English')], default='tr', max_length=7, verbose_name='language')),
                ('image', models.ImageField(blank=True, null=True, upload_to='content/', verbose_name='image')),
                ('featured', models.BooleanField(default=False, verbose_name='featured')),
                ('publish', models.BooleanField(default=False, verbose_name='publish')),
                ('added', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('view_count', models.PositiveIntegerField(default=0, editable=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Category')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_content.content_set+', to='contenttypes.ContentType')),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_content', models.ManyToManyField(blank=True, related_name='_content_related_content_+', to='content.Content', verbose_name='related content')),
                ('series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Series', verbose_name='series')),
                ('tags', models.ManyToManyField(blank=True, to='content.Tag')),
            ],
            options={
                'verbose_name': 'content',
                'verbose_name_plural': 'content',
                'ordering': ('-added',),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('content_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='content.Content')),
                ('url', models.URLField(verbose_name='video url')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='summary')),
                ('transcript', martor.models.MartorField(blank=True, null=True)),
                ('podcast', models.URLField(blank=True, null=True, verbose_name='podcast url')),
                ('guests', models.ManyToManyField(blank=True, to='content.Contributor', verbose_name='guests')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hosted_video_set', to='content.Contributor', verbose_name='author')),
            ],
            options={
                'verbose_name': 'video content',
                'verbose_name_plural': 'video content',
            },
            bases=('content.content',),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('content_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='content.Content')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='summary')),
                ('body', martor.models.MartorField()),
                ('issue', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_set', to='content.Contributor', verbose_name='author')),
                ('photo_credits', models.ManyToManyField(blank=True, related_name='photographed_articles', to='content.Contributor', verbose_name='Photo credits')),
            ],
            options={
                'verbose_name': 'article',
                'verbose_name_plural': 'articles',
            },
            bases=('content.content',),
        ),
    ]
